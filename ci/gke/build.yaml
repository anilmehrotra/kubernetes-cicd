apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: git-source
spec:
  type: git
  params:
  - name: revision
    value: master
  - name: url
    value: https://github.com/castlemilk/kubernetes-cicd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default-cluster-admin
subjects:
  - kind: ServiceAccount
    name: default
    namespace: tekton-pipelines
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
# apiVersion: tekton.dev/v1alpha1
# kind: PipelineResource
# metadata:
#   name: frontend-image
# spec:
#   type: image
#   params:
#     - name: url
#       value: gcr.io/_PROJECT_ID/demo/frontend
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: docker-image
spec:
  type: image
  params:
  - name: url
    value: gcr.io/_PROJECT_ID/demo/backend
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: update-status
spec:
  inputs:
    resources:
    - name: workspace
      type: git
    params:
    - name: state
      description: state of the given pipeline, can be one of `success`, `failure`, `pending`, `error`
      default: pending 
  steps:
  - name: message 
    image: castlemilk/curl
    command:
    - /bin/sh
    args:
    - '-c'
    - |
      curl 'https://api.github.com/repos/castlemilk/kubernetes-cicd/statuses/${inputs.resources.workspace.revision}?access_token=_GITHUB_STATUS_TOKEN' \
        -H 'Content-Type: application/json' \
        -X POST \
        -d '{"state": "${inputs.params.state}", "description": "Tekton", "context": "Build","target_url": "http://tekton-dashboard.tekton-pipelines.cicd.benebsworth.com/#/namespaces/tekton-pipelines/pipelineruns"}'
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: backend-linting
spec:
  inputs:
    resources:
    - name: workspace
      type: git
    params:
    - name: workingDir
      description: working directory where src files live
      default: /workspace/workspace/app/src/backend
  steps:
  - name: update-status-pending
    image: castlemilk/curl
    command:
    - /bin/sh
    args:
    - '-c'
    - |
      curl 'https://api.github.com/repos/castlemilk/kubernetes-cicd/statuses/${inputs.resources.workspace.revision}?access_token=_GITHUB_STATUS_TOKEN' \
        -H 'Content-Type: application/json' \
        -X POST \
        -d '{"state": "pending", "description": "Tekton", "context": "Linting","target_url": "http://tekton-dashboard.tekton-pipelines.cicd.benebsworth.com/#/namespaces/tekton-pipelines/pipelineruns"}'
  - name: run-linting
    image: golangci/golangci-lint
    workingDir: ${inputs.params.workingDir}
    args:
    - 'run'
    - './...'
    - '--config'
    - './.golangci.yaml'
    - '-v'
  - name: update-status-success
    image: castlemilk/curl
    command:
    - /bin/sh
    args:
    - '-c'
    - |
      curl 'https://api.github.com/repos/castlemilk/kubernetes-cicd/statuses/${inputs.resources.workspace.revision}?access_token=_GITHUB_STATUS_TOKEN' \
        -H 'Content-Type: application/json' \
        -X POST \
        -d '{"state": "success", "description": "Tekton", "context": "Linting","target_url": "http://tekton-dashboard.tekton-pipelines.cicd.benebsworth.com/#/namespaces/tekton-pipelines/pipelineruns"}'
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: backend-integration-tests
spec:
  inputs:
    resources:
    - name: workspace
      type: git
    params:
    - name: workingDir
      description: working directory where src files live
      default: /workspace/workspace/app/
  steps:
  - name: update-status-pending
    image: castlemilk/curl
    command:
    - /bin/sh
    args:
    - '-c'
    - |
      curl 'https://api.github.com/repos/castlemilk/kubernetes-cicd/statuses/${inputs.resources.workspace.revision}?access_token=_GITHUB_STATUS_TOKEN' \
        -H 'Content-Type: application/json' \
        -X POST \
        -d '{"state": "pending", "description": "Tekton", "context": "IntegrationTests","target_url": "http://tekton-dashboard.tekton-pipelines.cicd.benebsworth.com/#/namespaces/tekton-pipelines/pipelineruns"}'
  - name: deploy-postgres
    image: gcr.io/k8s-skaffold/skaffold
    workingDir: ${inputs.params.workingDir}
    command:
    - skaffold
    args:
    - 'deploy'
    - '-p'
    - 'ci-postgres'
  - name: wait-for-postgres
    image: gcr.io/k8s-skaffold/skaffold
    workingDir: ${inputs.params.workingDir}
    command:
    - kubectl
    args:
    - '-n'
    - 'tekton-pipelines'
    - 'wait'
    - 'deployment/postgres-ci'
    - '--for'
    - 'condition=available'
  - name: integration-tests
    image: golang
    env:
    - name: GO111MODULE
      value: "on"
    - name: PG_HOST
      value: postgres-ci
    workingDir: ${inputs.params.workingDir}/src/backend
    command:
    - go
    args:
    - 'test'
    - './...'
    - '-mod=vendor'
    - '-run'
    - '"Integration"'
    - '-v'
  - name: update-status-success
    image: castlemilk/curl
    command:
    - /bin/sh
    args:
    - '-c'
    - |
      curl 'https://api.github.com/repos/castlemilk/kubernetes-cicd/statuses/${inputs.resources.workspace.revision}?access_token=_GITHUB_STATUS_TOKEN' \
        -H 'Content-Type: application/json' \
        -X POST \
        -d '{"state": "success", "description": "Tekton", "context": "IntegrationTests","target_url": "http://tekton-dashboard.tekton-pipelines.cicd.benebsworth.com/#/namespaces/tekton-pipelines/pipelineruns"}'
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: backend-unit-tests
spec:
  inputs:
    resources:
    - name: workspace
      type: git
    params:
    - name: workingDir
      description: working directory where src files live
      default: /workspace/workspace/app/src/backend
  steps:
  - name: update-status-pending
    image: castlemilk/curl
    command:
    - /bin/sh
    args:
    - '-c'
    - |
      curl 'https://api.github.com/repos/castlemilk/kubernetes-cicd/statuses/${inputs.resources.workspace.revision}?access_token=_GITHUB_STATUS_TOKEN' \
        -H 'Content-Type: application/json' \
        -X POST \
        -d '{"state": "pending", "description": "Tekton", "context": "UnitTests","target_url": "http://tekton-dashboard.tekton-pipelines.cicd.benebsworth.com/#/namespaces/tekton-pipelines/pipelineruns"}'
  - name: run-tests
    image: golang
    env:
    - name: GO111MODULE
      value: "on" 
    workingDir: ${inputs.params.workingDir}
    command:
    - go
    args:
    - 'test'
    - './...'
    - '-mod=vendor'
    - '-run'
    - '"Unit"'
  - name: update-status-success
    image: castlemilk/curl
    command:
    - /bin/sh
    args:
    - '-c'
    - |
      curl 'https://api.github.com/repos/castlemilk/kubernetes-cicd/statuses/${inputs.resources.workspace.revision}?access_token=_GITHUB_STATUS_TOKEN' \
        -H 'Content-Type: application/json' \
        -X POST \
        -d '{"state": "success", "description": "Tekton", "context": "UnitTests","target_url": "http://tekton-dashboard.tekton-pipelines.cicd.benebsworth.com/#/namespaces/tekton-pipelines/pipelineruns"}'
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: webhook-build-push
spec:
  inputs:
    resources:
      - name: workspace
        type: git
    params:
      - name: appName
        description: name of the app being build
        default: demo-app
      - name: pathToDockerFile
        description: The path to the dockerfile to build
        default: /workspace/workspace/Dockerfile
      - name: pathToContext
        description:
          The build context used by Kaniko
          (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
        default: /workspace/workspace
      - name: imageTag
        description: tag for the given build artifact
        default: latest
      - name: destinationRegistry
        description: The registry to store the given build artifact
        default: gcr.io/kubernetes-cicd-246207/demo/default
  outputs:
    resources:
      - name: builtImage
        type: image
  steps:
  - name: update-status-pending
    image: castlemilk/curl
    command:
    - /bin/sh
    args:
    - '-c'
    - |
      curl 'https://api.github.com/repos/castlemilk/kubernetes-cicd/statuses/${inputs.resources.workspace.revision}?access_token=_GITHUB_STATUS_TOKEN' \
        -H 'Content-Type: application/json' \
        -X POST \
        -d '{"state": "pending", "description": "Tekton", "context": "Build","target_url": "http://tekton-dashboard.tekton-pipelines.cicd.benebsworth.com/#/namespaces/tekton-pipelines/pipelineruns"}'
  - name: build-and-push
    image: gcr.io/kaniko-project/executor
    env:
    - name: "DOCKER_CONFIG"
      value: "/builder/home/.docker/"
    command:
      - /kaniko/executor
    args:
      - --dockerfile=${inputs.params.pathToDockerFile}
      - --destination=${inputs.params.destinationRegistry}/${inputs.params.appName}:${inputs.params.imageTag}
      - --context=${inputs.params.pathToContext}
      - --cache=true
      - --cache-repo=${inputs.params.destinationRegistry}/${inputs.params.appName}
      - --insecure
  - name: update-status-success
    image: castlemilk/curl
    command:
    - /bin/sh
    args:
    - '-c'
    - |
      curl 'https://api.github.com/repos/castlemilk/kubernetes-cicd/statuses/${inputs.resources.workspace.revision}?access_token=_GITHUB_STATUS_TOKEN' \
        -H 'Content-Type: application/json' \
        -X POST \
        -d '{"state": "success", "description": "Tekton", "context": "Build","target_url": "http://tekton-dashboard.tekton-pipelines.cicd.benebsworth.com/#/namespaces/tekton-pipelines/pipelineruns"}'
---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: cicd-pipeline
spec:
  params:
    - name: image-tag
      description: tag associated with trigger event (maps to a commit SHA)
      default: latest
    - name: image-name
      description: name of the given image to build (not used for mono-repo)
      default: gcr.io/kubernetes-cicd-246207/demo/kubernetes-cicd
    - name: release-name
      description: name of the release if found
      default: kubernetes-cicd
    - name: repository-name
      description: name of the repository that the webhook corresponds to
      default: kubernetes-cicd
    - name: target-namespace
      description: namespace to deploy workloads to
      default: tekton-pipelines
    - name: docker-registry
      description: docker registry base path
      default: gcr.io/kubernetes-cicd-246207/demo
  resources:
  - name: git-source
    type: git
  - name: docker-image
    type: image
  tasks:
  - name: test-backend
    taskRef:
      name: backend-unit-tests
    params:
      - name: workingDir
        value: /workspace/workspace/app/src/backend
    resources:
      inputs:
      - name: workspace
        resource: git-source
  - name: lint-backend
    taskRef:
      name: backend-linting
    params:
      - name: workingDir
        value: /workspace/workspace/app/src/backend
    resources:
      inputs:
      - name: workspace
        resource: git-source
  - name: build-backend
    runAfter:
    - lint-backend
    - test-backend
    taskRef:
      name: webhook-build-push
    params:
      - name: appName
        value: backend
      - name: imageTag
        value: ${params.image-tag}
      - name: destinationRegistry
        value: ${params.docker-registry}
      - name: pathToDockerFile
        value: /workspace/workspace/app/src/backend/Dockerfile
      - name: pathToContext
        value: /workspace/workspace/app/src/backend
    resources:
      inputs:
      - name: workspace
        resource: git-source 
      outputs:
      - name: builtImage
        resource: docker-image
  - name: integration-test-backend
    taskRef:
      name: backend-integration-tests
    params:
      - name: workingDir
        value: /workspace/workspace/app/
    resources:
      inputs:
      - name: workspace
        resource: git-source
---
# apiVersion: tekton.dev/v1alpha1
# kind: PipelineRun
# metadata:
#   name: cicd-pipeline-run-1
# spec:
#   serviceAccount: 'default'
#   pipelineRef:
#     name: cicd-pipeline
#   resources:
#   - name: git-source
#     resourceRef:
#       name: git-source
#   - name: docker-image
#     resourceRef:
#       name: docker-image