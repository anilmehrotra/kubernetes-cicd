apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: git-source
spec:
  type: git
  params:
  - name: revision
    value: master
  - name: url
    value: https://github.com/castlemilk/kubernetes-cicd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default-cluster-admin
subjects:
  - kind: ServiceAccount
    name: default
    namespace: tekton-pipelines
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
# apiVersion: tekton.dev/v1alpha1
# kind: PipelineResource
# metadata:
#   name: frontend-image
# spec:
#   type: image
#   params:
#     - name: url
#       value: gcr.io/_PROJECT_ID/demo/frontend
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: docker-image
spec:
  type: image
  params:
  - name: url
    value: gcr.io/_PROJECT_ID/demo/backend
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: update-status
spec:
  inputs:
    resources:
    - name: image
      type: image
  steps:
  - name: message 
    image: golang
    env:
    - name: GOPATH
      value: /workspace/go
    command:
    - echo
    args:
    - "${inputs.resources.image.revision}"
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: webhook-build-push
spec:
  inputs:
    resources:
      - name: workspace
        type: git
    params:
      - name: appName
        description: name of the app being build
        default: demo-app
      - name: pathToDockerFile
        description: The path to the dockerfile to build
        default: /workspace/workspace/Dockerfile
      - name: pathToContext
        description:
          The build context used by Kaniko
          (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
        default: /workspace/workspace
      - name: imageTag
        description: tag for the given build artifact
        default: latest
      - name: destinationRegistry
        description: The registry to store the given build artifact
        default: gcr.io/kubernetes-cicd-246207/demo/default
  outputs:
    resources:
      - name: builtImage
        type: image
  steps:
  - name: build-and-push
    image: gcr.io/kaniko-project/executor
    env:
    - name: "DOCKER_CONFIG"
      value: "/builder/home/.docker/"
    command:
      - /kaniko/executor
    args:
      - --dockerfile=${inputs.params.pathToDockerFile}
      - --destination=${inputs.params.destinationRegistry}/${inputs.params.appName}:${inputs.params.imageTag}
      - --context=${inputs.params.pathToContext}
      - --cache=true
      - --cache-repo=${inputs.params.destinationRegistry}/${inputs.params.appName}
      - --insecure
---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: cicd-pipeline
spec:
  params:
    - name: image-tag
      description: tag associated with trigger event (maps to a commit SHA)
      default: latest
    - name: image-name
      description: name of the given image to build (not used for mono-repo)
      default: gcr.io/kubernetes-cicd-246207/demo/kubernetes-cicd
    - name: release-name
      description: name of the release if found
      default: kubernetes-cicd
    - name: repository-name
      description: name of the repository that the webhook corresponds to
      default: kubernetes-cicd
    - name: target-namespace
      description: namespace to deploy workloads to
      default: tekton-pipelines
    - name: docker-registry
      description: docker registry base path
      default: gcr.io/kubernetes-cicd-246207/demo
  resources:
  - name: git-source
    type: git
  - name: docker-image
    type: image
  tasks:
  - name: build-backend 
    taskRef:
      name: webhook-build-push
    params:
      - name: appName
        value: backend
      - name: imageTag
        value: ${params.image-tag}
      - name: destinationRegistry
        value: ${params.docker-registry}
      - name: pathToDockerFile
        value: /workspace/workspace/app/src/backend/Dockerfile
      - name: pathToContext
        value: /workspace/workspace/app/src/backend
    resources:
      inputs:
      - name: workspace
        resource: git-source 
      outputs:
      - name: builtImage
        resource: docker-image
  - name: update-status 
    runAfter:
    - build-backend
    taskRef:
      name: update-status
    resources:
      inputs:
      - name: image
        resource: docker-image
        from:
        - build-backend
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineRun
metadata:
  name: cicd-pipeline-run-1
spec:
  serviceAccount: 'default'
  pipelineRef:
    name: cicd-pipeline
  resources:
  - name: git-source
    resourceRef:
      name: git-source
  - name: docker-image
    resourceRef:
      name: docker-image