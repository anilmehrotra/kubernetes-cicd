---
# The getting-started Pipeline will run through several tasks:
# - source is pulled from git
# - conditions say go test must pass before moving on
# - source is built into an image by img
# - image output is pushed to ECR
# - cloudevent emitted
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: getting-started-pipeline
  namespace: getting-started
spec:
  resources:
    - name: source-repo
      type: git
    - name: event-to-sink
      type: cloudEvent
  tasks:
    - name: kubectl-example
      taskRef:
        name: kubectl-example
      resources:
        inputs:
          - name: source-repo
            resource: source-repo
        outputs:
          - name: event-to-sink
            resource: event-to-sink
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: kubectl-example
  namespace: getting-started
spec:
  inputs:
    resources:
      - name: source-repo
        type: git
  outputs:
    resources:
    - name: event-to-sink
      type: cloudEvent
  steps:
    - name: test
      image: ubuntu
      command: ['/bin/bash']
      args:
        - '-c'
        - 'echo $(inputs.resources.source-repo.revision)'
---
# Finally, we need something to receive our cloudevent announcing success!
# That is this services only purpose
apiVersion: v1
kind: Service
metadata:
  name: event-display
  namespace: getting-started
  labels:
    app: event-display
spec:
  type: ClusterIP
  ports:
    - name: listener
      port: 8080
      protocol: TCP
  selector:
    app: event-display
---
apiVersion: v1
kind: Pod
metadata:
  name: event-display
  namespace: getting-started
  labels:
    app: event-display
spec:
  hostname: event-display
  containers:
  - image: gcr.io/knative-releases/github.com/knative/eventing-sources/cmd/event_display
    name: web